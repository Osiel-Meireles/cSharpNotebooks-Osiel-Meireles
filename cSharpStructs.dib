#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"name":"csharp"},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"html","languageName":"HTML"},{"name":"http","languageName":"HTTP"},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"mermaid","languageName":"Mermaid"},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"value"}]}}

#!markdown

### Struct

Com struct em C#, você pode criar estruturas de dados simples e eficientes, ideais para representar coisas pequenas e imutáveis.
Struct em C# é tipo uma "caixinha leve" pra guardar dados simples, como coordenadas ou cores. Diferente das classes, elas não precisam de new pra usar, ocupam menos memória e são copiadas por valor, não por referência.

Aqui vão alguns exemplos do que dá pra criar:

- Ponto no espaço: Point(x, y)

- Tamanho ou dimensão: Size(largura, altura)

- Cor: Color(r, g, b)

- Data customizada: Data(dia, mês, ano)

- Moeda ou valor monetário: Dinheiro(valor, moeda)

- Temperatura: Temperatura(valor, escala)

- Vetores e coordenadas 2D/3D

- Resultado de operação: tipo um Result(sucesso, mensagem)

Elas são ótimas quando:

    você quer agilidade (menos consumo de memória), não precisa de herança e o dado é imutável e pequeno.

#!markdown

### Criando uma Struct

#!csharp

struct Employee
{
    public int Id;
    public string Name;
    public string Function;
    public double Salary;
    public int YearsEmployed; 

    public void SalaryUpgrade()
    {
        double salary = Salary;
        double yearsEmployed = YearsEmployed;

        if (Function == "Oreia")
        {
            double salaryUpgrade =  salary * 0.50;
            double salaryUpgraded = salary + salaryUpgrade;
            Console.WriteLine("Aumento de salário: R$" + salaryUpgraded);
        }
    }
}

#!markdown

### Setando os parâmetros da Struct

#!csharp

var employee = new Employee();
employee.Id = 1;
employee.Name = "Joãozinho";
employee.Function = "Oreia";
employee.Salary = 15000;
employee.YearsEmployed = 4;

employee.SalaryUpgrade();
